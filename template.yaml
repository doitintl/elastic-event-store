AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Elastic Event Store

Parameters:
  ReadCapacityUnits:
    Description: Provisioned read throughput
    Type: Number
    Default: '1'
    MinValue: '1'
    MaxValue: '10000'
    ConstraintDescription: must be between 1 and 10000
  WriteCapacityUnits:
    Description: Provisioned write throughput
    Type: Number
    Default: '1'
    MinValue: '1'
    MaxValue: '10000'
    ConstraintDescription: must be between 1 and 10000

Resources:
  EventStoreTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Join [ '_', ['ees', 'db', !Ref AWS::StackName] ]
      AttributeDefinitions:
      - AttributeName: stream_id
        AttributeType: S
      - AttributeName: changeset_id
        AttributeType: N
      - AttributeName: first_event_id
        AttributeType: N
      - AttributeName: last_event_id
        AttributeType: N
      - AttributeName: page
        AttributeType: N
      - AttributeName: page_item
        AttributeType: N
      KeySchema:
      - AttributeName: stream_id
        KeyType: HASH
      - AttributeName: changeset_id
        KeyType: RANGE
      LocalSecondaryIndexes:
      - IndexName: FirstEventId
        KeySchema:
        - AttributeName: stream_id
          KeyType: HASH
        - AttributeName: first_event_id
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: LastEventId
        KeySchema:
        - AttributeName: stream_id
          KeyType: HASH
        - AttributeName: last_event_id
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      GlobalSecondaryIndexes:
      - IndexName: EmumerationIndex
        KeySchema:
        - AttributeName: page
          KeyType: HASH
        - AttributeName: page_item
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: !Ref ReadCapacityUnits
          WriteCapacityUnits: !Ref WriteCapacityUnits
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  
  ChangesetsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      ContentBasedDeduplication: True
      TopicName: !Join [ '_', ['ees', 'changesets', !Ref AWS::StackName, '.fifo'] ]
      FifoTopic: True
  
  EventsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      ContentBasedDeduplication: True
      TopicName: !Join [ '_', ['ees', 'events', !Ref AWS::StackName, '.fifo'] ]
      FifoTopic: True

  CommandHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: lambda_entrypoint.request_handler
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          EventStoreTable: !Ref EventStoreTable
          AnalysisTable: !Ref AnalysisTable
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref EventStoreTable
        - DynamoDBCrudPolicy:
            TableName: !Ref AnalysisTable
      Events:
        Version:
          Type: Api
          Properties:
            Path: /version
            Method: get
        Stats:
          Type: Api
          Properties:
            Path: /streams
            Method: get
        Commit:
          Type: Api
          Properties:
            Path: /streams/{stream_id}
            Method: post
        StreamChangesets:
          Type: Api
          Properties:
            Path: /streams/{stream_id}/changesets
            Method: get
        StreamEvents:
          Type: Api
          Properties:
            Path: /streams/{stream_id}/events
            Method: get
        GlobalChangesets:
          Type: Api
          Properties:
            Path: /changesets
            Method: get
        GlobalEvents:
          Type: Api
          Properties:
            Path: /events
            Method: get
        
  GlobalIndexerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: lambda_entrypoint.indexer
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          EventStoreTable: !Ref EventStoreTable
          AnalysisTable: !Ref AnalysisTable
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref EventStoreTable
        - DynamoDBCrudPolicy:
            TableName: !Ref AnalysisTable
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt EventStoreTable.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON
            MaximumBatchingWindowInSeconds: 1
            Enabled: true
            ParallelizationFactor: 1
            MaximumRetryAttempts: 1000
            DestinationConfig:
              OnFailure:
                Type: SQS
                Destination: !GetAtt GlobalIndexerDLQ.Arn
  GlobalIndexerDLQ:
    Type: AWS::SQS::Queue
    Properties: 
      MessageRetentionPeriod: 1209600
      QueueName: !Join [ '_', ['ees', 'indexer_dead_letter_queue', !Ref AWS::StackName] ]

  PublisherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: lambda_entrypoint.publisher
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          EventStoreTable: !Ref EventStoreTable
          AnalysisTable: !Ref AnalysisTable
          ChangesetsTopic: !Ref ChangesetsTopic
          EventsTopic: !Ref EventsTopic
      Policies:
        - AmazonSNSFullAccess
        - SNSPublishMessagePolicy:
            TopicName: !Ref ChangesetsTopic
        - SNSPublishMessagePolicy:
            TopicName: !Ref EventsTopic
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt EventStoreTable.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON
            MaximumBatchingWindowInSeconds: 1
            Enabled: true
            ParallelizationFactor: 1
            MaximumRetryAttempts: 1000
            DestinationConfig:
              OnFailure:
                Type: SQS
                Destination: !GetAtt PublisherIndexerDLQ.Arn
  
  PublisherIndexerDLQ:
    Type: AWS::SQS::Queue
    Properties: 
      MessageRetentionPeriod: 1209600
      QueueName: !Join [ '_', ['ees', 'publisher_dead_letter_queue', !Ref AWS::StackName] ]
  
  AnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Join [ '_', ['ees', 'analysis', !Ref AWS::StackName] ]
      AttributeDefinitions:
      - AttributeName: projection_id
        AttributeType: S
      KeySchema:
      - AttributeName: projection_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 1
  
  AnalysisProjectorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: lambda_entrypoint.analysis_projector
      Runtime: python3.8
      Timeout: 600
      Environment:
        Variables:
          EventStoreTable: !Ref EventStoreTable
          AnalysisTable: !Ref AnalysisTable
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref EventStoreTable
        - DynamoDBCrudPolicy:
            TableName: !Ref AnalysisTable
      Events:
        Chron:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  ChangesetsTopic:
    Description: "SNS topic for subscribing to published changesets."
    Value: !Ref ChangesetsTopic
  EventsTopic:
    Description: "SNS topic for subscribing to published events."
    Value: !Ref EventsTopic